{{- if .Values.manifests.job_create_namespaces }}
{{- $envAll := . }}

{{- $serviceAccountName := printf "create-namespace-%s" .Release.Name }}
{{- $ImagePullSecret := printf "create-image-pull-secret-%s" .Release.Name }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ $ImagePullSecret }}
  namespace: {{ .Values.jenkinsNodes.service.namespace }}
  labels:
{{ tuple $envAll "image-pull-secret" "create-image-pull-secret" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 4 }}
  annotations:
    "helm.sh/hook": "post-install,post-upgrade"
    "helm.sh/hook-delete-policy": "before-hook-creation"
spec:
  template:
    metadata:
      annotations:
{{ dict "envAll" $envAll "podName" "create-image-pull-secret" "containerNames" (list "image-pull-secret-add-sa" ) | include "helm-toolkit.snippets.kubernetes_mandatory_access_control_annotation" | indent 8 }}
    spec:
      restartPolicy: Never
      serviceAccount: {{ $serviceAccountName }}
      containers:
      - name: image-pull-secret-add-sa
        image: {{ .Values.images.tags.namespace_creator }}
        imagePullPolicy: {{ .Values.images.pull_policy }}
        command: ["/bin/sh","-c", "kubectl patch serviceaccount default -p '{\"imagePullSecrets\": [{\"name\": \"{{ template "dockerconfigjson.name" . }}\"}]}' -n {{ .Values.jenkinsNodes.namespace }}"]
{{- end -}}
