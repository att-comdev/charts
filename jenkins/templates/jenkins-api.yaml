{{/*
Copyright 2018 The Openstack-Helm Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/}}

{{- $envAll := . }}

{{- $serviceAccountName := "jenkins-api" }}
{{ tuple $envAll "api" $serviceAccountName | include "helm-toolkit.snippets.kubernetes_pod_rbac_serviceaccount" }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: jenkins-api
  labels:
{{ tuple $envAll "jenkins" "api" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 4 }}
  annotations:
    configmap-bin-hash: {{ tuple "configmap-bin.yaml" . | include "helm-toolkit.utils.hash" }}
    configmap-etc-hash: {{ tuple "configmap-etc.yaml" . | include "helm-toolkit.utils.hash" }}
    configmap-init-hash: {{ tuple "configmap-init.yaml" . | include "helm-toolkit.utils.hash" }}
spec:
  serviceName: jenkins-api
  replicas: {{ .Values.pod.replicas.api }}
  selector:
    matchLabels:
{{ tuple $envAll "jenkins" "api" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 6 }}
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
{{ tuple $envAll "jenkins" "api" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 8 }}
      annotations:
        configmap-bin-hash: {{ tuple "configmap-bin.yaml" . | include "helm-toolkit.utils.hash" }}
        configmap-etc-hash: {{ tuple "configmap-etc.yaml" . | include "helm-toolkit.utils.hash" }}
        configmap-init-hash: {{ tuple "configmap-init.yaml" . | include "helm-toolkit.utils.hash" }}
{{ dict "envAll" $envAll "podName" "jenkins-api" "containerNames" (list "seed" "jenkins" "cert-add") | include "helm-toolkit.snippets.kubernetes_mandatory_access_control_annotation" | indent 8 }}
    spec:
      serviceAccountName: {{ $serviceAccountName }}
      affinity:
{{ tuple $envAll "jenkins" "api" | include "helm-toolkit.snippets.kubernetes_pod_anti_affinity" | indent 8 }}
{{ dict "envAll" $envAll "application" "jenkins" | include "helm-toolkit.snippets.kubernetes_pod_security_context" | indent 6 }}
      nodeSelector:
        {{ .Values.labels.api.node_selector_key }}: {{ .Values.labels.api.node_selector_value }}
      terminationGracePeriodSeconds: {{ .Values.pod.lifecycle.termination_grace_period.api.timeout | default "600" }}
      initContainers:
{{ tuple $envAll "api" list | include "helm-toolkit.snippets.kubernetes_entrypoint_init_container" | indent 8 }}
        - name: seed
          image: {{ .Values.images.tags.jenkins }}
          imagePullPolicy: {{ .Values.images.pull_policy }}
{{ tuple $envAll $envAll.Values.pod.resources.api | include "helm-toolkit.snippets.kubernetes_resources" | indent 10 }}
{{ dict "envAll" $envAll "application" "jenkins" "container" "seed" | include "helm-toolkit.snippets.kubernetes_container_security_context" | indent 10 }}
          command:
            - /tmp/seed.sh
          volumeMounts:
            - name: jenkins-home
              mountPath: /var/jenkins_home
            - name: jenkins-bin
              mountPath: /tmp/seed.sh
              subPath: seed.sh
            - name: jenkins-etc
              mountPath: /seed/config.xml
              subPath: config.xml
            - name: jenkins-etc
              mountPath: /seed/jobs/CICD/config.xml
              subPath: cicdfolderconfig.xml
            - name: jenkins-etc
              mountPath: /seed/jobs/CICD/jobs/SuperSeed/config.xml
              subPath: superseedconfig.xml
            - name: jenkins-etc
              mountPath: /seed/jenkins.security.UpdateSiteWarningsConfiguration.xml
              subPath: jenkins.security.UpdateSiteWarningsConfiguration.xml
            - name: jenkins-etc
              mountPath: /seed/jenkins.security.QueueItemAuthenticatorConfiguration.xml
              subPath: jenkins.security.QueueItemAuthenticatorConfiguration.xml
            - name: jenkins-etc
              mountPath: /seed/com.arkea.jenkins.openstack.heat.HOTPlayerSettings.xml
              subPath: com.arkea.jenkins.openstack.heat.HOTPlayerSettings.xml
            - name: jenkins-etc
              mountPath: /seed/jenkins.CLI.xml
              subPath: jenkins.CLI.xml
            - name: jenkins-etc
              mountPath: /seed/credentials.xml
              subPath: credentials.xml
            - name: jenkins-etc
              mountPath: /seed/org.jfrog.hudson.ArtifactoryBuilder.xml
              subPath: org.jfrog.hudson.ArtifactoryBuilder.xml
            - name: jenkins-etc
              mountPath: /seed/org.jenkinsci.plugins.workflow.libs.GlobalLibraries.xml
              subPath: org.jenkinsci.plugins.workflow.libs.GlobalLibraries.xml
            - name: jenkins-etc
              mountPath: /seed/hudson.plugins.emailext.ExtendedEmailPublisher.xml
              subPath: hudson.plugins.emailext.ExtendedEmailPublisher.xml
            - name: jenkins-etc
              mountPath: /seed/hudson.tasks.Mailer.xml
              subPath: hudson.tasks.Mailer.xml
            - name: jenkins-etc
              mountPath: /seed/audit-trail.xml
              subPath: audit-trail.xml
            {{- if .Values.conf.location_config.enable }}
            - name: jenkins-etc
              mountPath: /seed/jenkins.model.JenkinsLocationConfiguration.xml
              subPath: jenkins.model.JenkinsLocationConfiguration.xml
            {{- end}}
            {{- if .Values.conf.gerrit_trigger.enable }}
            - name: jenkins-etc
              mountPath: /seed/gerrit-trigger.xml
              subPath: gerrit-trigger.xml
            - name: jenkins-secret
              mountPath: /keys
            {{- end }}
            - name: jenkins-init
              mountPath: /tmp/relaxed-CSP.groovy
              subPath: relaxed-CSP.groovy
            - name: jenkins-init
              mountPath: /tmp/artifactory-css.groovy
              subPath: artifactory-css.groovy
        {{- if .Values.manifests.certificates }}
        - name: cert-add
          image: {{ .Values.images.tags.jenkins }}
          imagePullPolicy: {{ .Values.images.pull_policy }}
{{ tuple $envAll $envAll.Values.pod.resources.api | include "helm-toolkit.snippets.kubernetes_resources" | indent 10 }}
{{ dict "envAll" $envAll "application" "jenkins" "container" "cert-add" | include "helm-toolkit.snippets.kubernetes_container_security_context" | indent 10 }}
          command:
            - /tmp/cert-add.sh
          volumeMounts:
            - name: jenkins-home
              mountPath: /var/jenkins_home
            - name: jenkins-bin
              mountPath: /tmp/cert-add.sh
              subPath: cert-add.sh
            - name: jenkins-cert
              readOnly: true
              mountPath: /tmp/tls.crt
              subPath: tls.crt
            - name: jenkins-cert
              readOnly: true
              mountPath: /tmp/tls.key
              subPath: tls.key
            - name: jenkins-cert
              readOnly: true
              mountPath: /tmp/ca.crt
              subPath: ca.crt
        {{- end }}
      containers:
        - name: jenkins
          image: {{ .Values.images.tags.jenkins }}
          imagePullPolicy: {{ .Values.images.pull_policy }}
{{ tuple $envAll $envAll.Values.pod.resources.api | include "helm-toolkit.snippets.kubernetes_resources" | indent 10 }}
{{ dict "envAll" $envAll "application" "jenkins" "container" "jenkins" | include "helm-toolkit.snippets.kubernetes_container_security_context" | indent 10 }}
          command:
            - /tmp/launch.sh
          {{- if $envAll.Values.pod.env }}
          env:
            {{- range $envAll.Values.pod.env }}
            - name: {{ .name | quote }}
              value: {{ .value | quote }}
            {{- end }}
            {{- if .Values.manifests.certificates }}
            - name: JENKINS_OPTS
              valueFrom:
                secretKeyRef:
                  name: jenkins-keystore-secret
                  key: JENKINS_OPTS
            {{- end }}
          {{ else }}
          env:
            - name: JENKINS_PROXY_CONFIG_FILE
              value: /var/jenkins_home/proxy.xml
            {{- if .Values.manifests.certificates }}
            - name: JENKINS_OPTS
              valueFrom:
                secretKeyRef:
                  name: jenkins-keystore-secret
                  key: JENKINS_OPTS
            {{- end }}
          {{- end }}
          ports:
            - containerPort: {{ .Values.containers.ports.containerPort }}
          volumeMounts:
            - name: pod-tmp
              mountPath: /tmp
            - name: jenkins-usr
              mountPath: /usr/share/jenkins/ref/plugins
            - name: jenkins-home
              mountPath: /var/jenkins_home
            - name: jenkins-bin
              mountPath: /tmp/launch.sh
              subPath: launch.sh
            - name: jenkins-etc
              mountPath: /plugins.txt
              subPath: plugins.txt
            - name: jenkins-bin
              mountPath: /proxy-config-gen.py
              subPath: proxy-config-gen.py
      volumes:
        - name: pod-tmp
          emptyDir: {}
        - name: jenkins-usr
          emptyDir:
            medium: "Memory"
        - name: jenkins-etc
          configMap:
            name: jenkins-etc
            defaultMode: 0444
        - name: jenkins-bin
          configMap:
            name: jenkins-bin
            defaultMode: 0555
        - name: jenkins-init
          configMap:
            name: jenkins-init
            defaultMode: 0555
        {{- if .Values.conf.gerrit_trigger.enable }}
        - name: jenkins-secret
          secret:
            secretName: jenkins-secret
            defaultMode: 0600
        {{- end }}
        {{- if .Values.manifests.certificates }}
        - name: jenkins-cert
          secret:
            secretName: {{ .Values.endpoints.jenkins.host_fqdn_override.default.tls.secretName }}
            defaultMode: 0600
        {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: jenkins-home
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.volume.size }}
      storageClassName: {{ .Values.volume.class_name }}

