{{- $envAll := . }}

{{- $serviceAccountName := printf "create-namespace-%s" .Release.Name }}
{{- $DeletePlugins := printf "delete-plugins-%s" .Release.Name }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ $DeletePlugins }}
  namespace: {{ .Values.jenkinsNodes.service.namespace }}
  labels:
{{ tuple $envAll "delete-plugins" "delete-plugins" | include "helm-toolkit.snippets.kubernetes_metadata_labels" | indent 4 }}
  annotations:
{{ tuple $envAll | include "helm-toolkit.snippets.release_uuid" | indent 4 }}
    "helm.sh/hook": "pre-upgrade"
    "helm.sh/hook-delete-policy": "before-hook-creation"
spec:
  template:
    metadata:
      annotations:
{{ dict "envAll" $envAll "podName" "delete-plugins" "containerNames" (list "delete-plugins") | include "helm-toolkit.snippets.kubernetes_mandatory_access_control_annotation" | indent 8 }}
    spec:
      restartPolicy: Never
      serviceAccount: {{ $serviceAccountName }}
      containers:
      - name: delete-plugins
{{ dict "envAll" $envAll "application" "delete_plugins" "container" "delete_plugins" | include "helm-toolkit.snippets.kubernetes_container_security_context" | indent 8 }}
        image: {{ .Values.images.tags.namespace_creator }}
        imagePullPolicy: {{ .Values.images.pull_policy }}
        command: ["/bin/sh","-c", "kubectl exec jenkins-api-0 -n {{ .Values.jenkinsNodes.service.namespace }} -- bash -c 'if [ -d '/var/jenkins_home/plugins_bkp' ]; then echo \"Deleting plugins backup folder\"; rm -rf /var/jenkins_home/plugins_bkp; fi; if [ -d '/var/jenkins_home/plugins' ]; then mv /var/jenkins_home/plugins /var/jenkins_home/plugins_bkp; fi'"]
