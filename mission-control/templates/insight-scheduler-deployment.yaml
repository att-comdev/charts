apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "insight-scheduler.fullname" . }}
  labels:
    app: {{ template "mission-control.name" . }}
    chart: {{ template "mission-control.chart" . }}
    component: {{ .Values.insightScheduler.name }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.insightScheduler.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "mission-control.name" . }}
      component: {{ .Values.insightScheduler.name }}
      release: {{ .Release.Name }}
  template:
    metadata:
      name: {{ .Values.insightScheduler.name }}
      labels:
        app: {{ template "mission-control.name" . }}
        component: {{ .Values.insightScheduler.name }}
        release: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ template "mission-control.serviceAccountName" . }}
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecrets }}
    {{- end }}
      securityContext:
        fsGroup: {{ .Values.uid }}
      initContainers:
      - name: "prepare-storage"
        image: "{{ .Values.initContainerImage }}"
        command:
        - 'sh'
        - '-c'
        - >
          mkdir -p {{ .Values.insightScheduler.persistence.mountPath }} ; 
          chown -R {{ .Values.uid }}:{{ .Values.uid }} {{ .Values.insightScheduler.persistence.mountPath }}
        volumeMounts:
        - name: insight-scheduler-data
          mountPath: {{ .Values.insightScheduler.persistence.mountPath | quote }}
      - name: "wait-for-db"
        image: "{{ .Values.initContainerImage }}"
        command:
        - 'sh'
        - '-c'
        - >
          until nc -z -w 2 {{ .Release.Name }}-mongodb 27017 && echo mongodb ok;
            do sleep 2;
          done;
          sleep 10
      containers:
      - name: {{ .Values.insightScheduler.name }}
        image: {{ .Values.insightScheduler.image }}:{{ default .Chart.AppVersion .Values.insightScheduler.version }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        env:
        - name: JFIS_URL
          value: 'http://{{ template "insight-server.fullname" . }}:{{ .Values.insightServer.internalHttpPort }}'
        - name: JFMC_URL
          value: 'http://{{ template "mission-control.fullname" . }}:{{ .Values.missionControl.internalPort }}'
        - name: MONGO_URL
          value: '{{ .Release.Name }}-mongodb:27017'
        - name: MONGODB_USERNAME
          value: '{{ .Values.mongodb.db.insightUser }}'
        - name: MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "mission-control.fullname" . }}-mongodb-cred
              key: insightPassword
        - name: MONGODB_ADMIN_USERNAME
          value: '{{ .Values.mongodb.db.adminUser }}'
        - name: MONGODB_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "mission-control.fullname" . }}-mongodb-cred
              key: adminPassword
        - name: JFMC_SCHEDULER_MONGO_DB
          value: '{{ .Values.mongodb.db.insightSchedulerDb }}'
        - name: JFMC_EXTRA_JAVA_OPTS
          value: "
          {{- if .Values.insightScheduler.javaOpts.other }}
              {{ .Values.insightScheduler.javaOpts.other }}
          {{- end}}
          {{- if .Values.insightScheduler.javaOpts.xms }}
              -Xms{{ .Values.insightScheduler.javaOpts.xms }}
          {{- end}}
          {{- if .Values.insightScheduler.javaOpts.xmx }}
              -Xmx{{ .Values.insightScheduler.javaOpts.xmx }}
          {{- end}}
          "        
        - name: JFSC_LOGS
          value: '{{ .Values.insightScheduler.home }}/{{ .Values.insightScheduler.name }}/logs'
        - name: JFSC_APP_NAME
          value: '{{ .Values.insightScheduler.name }}'
        volumeMounts:
        - name: insight-scheduler-data
          mountPath: {{ .Values.insightScheduler.persistence.mountPath | quote }}
        ports:
        - containerPort: {{ .Values.insightScheduler.internalPort }}
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /api/status
            port: {{ .Values.insightScheduler.internalPort }}
          initialDelaySeconds: 120
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/status
            port: {{ .Values.insightScheduler.internalPort }}
          initialDelaySeconds: 120
          periodSeconds: 10
        resources:
{{ toYaml .Values.insightScheduler.resources | indent 10 }}
    {{- with .Values.insightScheduler.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.insightScheduler.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.insightScheduler.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      volumes:
      - name: insight-scheduler-data
      {{- if .Values.insightScheduler.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ if .Values.insightScheduler.persistence.existingClaim }}{{ .Values.insightScheduler.persistence.existingClaim }}{{ else }}{{ template "insight-scheduler.fullname" . }}{{ end }}
      {{- else }}
        emptyDir: {}
      {{- end }}