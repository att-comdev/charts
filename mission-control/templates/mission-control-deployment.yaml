apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "mission-control.fullname" . }}
  labels:
    app: {{ template "mission-control.name" . }}
    chart: {{ template "mission-control.chart" . }}
    component: {{ .Values.missionControl.name }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
spec:
  replicas: {{ .Values.missionControl.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "mission-control.name" . }}
      component: {{ .Values.missionControl.name }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "mission-control.name" . }}
        component: {{ .Values.missionControl.name }}
        release: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ template "mission-control.serviceAccountName" . }}
    {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      - name: {{ .Values.imagePullSecrets }}
    {{- end }}
      securityContext:
        fsGroup: {{ .Values.uid }}
      initContainers:
      - name: "prepare-storage"
        image: "{{ .Values.initContainerImage }}"
        command:
        - 'sh'
        - '-c'
        - >
          mkdir -p {{ .Values.missionControl.persistence.mountPath }}; 
          chown -R {{ .Values.uid }}:{{ .Values.uid }} {{ .Values.missionControl.persistence.mountPath }}
        volumeMounts:
        - name: mission-control-data
          mountPath: {{ .Values.missionControl.persistence.mountPath | quote }}
      - name: "wait-for-db"
        image: "{{ .Values.initContainerImage }}"
        command:
        - 'sh'
        - '-c'
        - >
          until nc -z -w 2 {{ .Release.Name }}-mongodb 27017 && echo mongodb ok && \
                nc -z -w 2 {{ .Release.Name }}-elasticsearch 9200 && echo elasticsearch ok;
            do sleep 2;
          done;
          sleep 10
      - name: set-password
        image: "{{ .Values.initContainerImage }}"
        command:
        - 'sh'
        - '-c'
        - >
          chown -R {{ .Values.uid }}:{{ .Values.uid }} {{ .Values.missionControl.persistence.mountPath }};
        volumeMounts:
        - name: mission-control-data
          mountPath: {{ .Values.missionControl.persistence.mountPath | quote }}
      containers:
      - name: {{ .Values.missionControl.name }}
        image: {{ .Values.missionControl.image }}:{{ default .Chart.AppVersion .Values.missionControl.version }}
        imagePullPolicy: {{ .Values.imagePullPolicy }}
        env:
        - name: SPRING_DATA_MONGODB_HOST
          value: '{{ .Release.Name }}-mongodb'
        - name: SPRING_DATA_MONGODB_PORT
          value: '27017'
        - name: SPRING_DATA_MONGODB_USERNAME
          value: '{{ .Values.mongodb.db.mcUser }}'
        - name: SPRING_DATA_MONGODB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "mission-control.fullname" . }}-mongodb-cred
              key: mcPassword
        - name: SPRING_DATA_MONGODB_DATABASE
          value: '{{ .Values.mongodb.db.missionControl }}'
        - name: INSIGHT_URL
          value: "http://{{ template "insight-server.fullname" . }}:{{ .Values.insightServer.internalHttpPort }}"
        - name: POD_RESTART_TIME
          value: "{{ .Values.podRestartTime }}"
        - name: ARTIFACTORY_CLIENT_CONNECTIONTIMEOUT
          value: '20'
        - name: XRAY_CLIENT_CONNECTIONTIMEOUT
          value: '20'
        - name: JENKINS_CLIENT_CONNECTIONTIMEOUT
          value: '20'
        - name: GIT_CLIENT_CONNECTIONTIMEOUT
          value: '20'
        - name: INSIGHT_CLIENT_CONNECTIONTIMEOUT
          value: '20'
        - name: MC_URL
          value: "{{ .Values.missionControl.missionControlUrl }}"
        - name: JFMC_EXTRA_JAVA_OPTS
          value: "
          {{- if .Values.missionControl.javaOpts.other }}
              {{ .Values.missionControl.javaOpts.other }}
          {{- end}}
          {{- if .Values.missionControl.javaOpts.xms }}
              -Xms{{ .Values.missionControl.javaOpts.xms }}
          {{- end }}
          {{- if .Values.missionControl.javaOpts.xmx }}
              -Xmx{{ .Values.missionControl.javaOpts.xmx }}
          {{- end }}
          "
        - name: JFMC_SERVER_HOME
          value: "{{ .Values.missionControl.home }}"
        - name: JFMC_LOGS_ROOT
          value: "{{ .Values.missionControl.home }}/logs"
        - name: JFMC_LOGS
          value: "{{ .Values.missionControl.home }}/logs/{{ .Values.missionControl.appName }}"
        - name: JFMC_APP_NAME
          value: "{{ .Values.missionControl.appName }}"
        - name: JFSC_URL
          value: 'http://{{ template "insight-scheduler.fullname" . }}:{{ .Values.insightScheduler.internalPort }}'
        - name: JFMC_REPOSITORY
          value: "{{ .Values.missionControl.repository }}"
        - name: JFMC_PACKAGE
          value: "{{ .Values.missionControl.package }}"
        - name: JFMC_DIST
          value: "{{ .Values.missionControl.dist }}"
        - name: JFMC_OS_VERSION
          value: "{{ .Values.missionControl.osVersion }}"
        - name: JFMC_OS_TYPE
          value: "{{ .Values.missionControl.osType }}"
        - name: JFMC_OS_DIST
          value: "{{ .Values.missionControl.osDist }}"
        - name: JFMC_CREATE_DATE
          value: "{{ .Values.podRestartTime }}"
        ports:
        - containerPort: {{ .Values.missionControl.internalPort }}
          protocol: TCP
        volumeMounts:
        - name: mission-control-data
          mountPath: {{ .Values.missionControl.persistence.mountPath | quote }}
        resources:
{{ toYaml .Values.missionControl.resources | indent 10 }}
        livenessProbe:
          httpGet:
            path: /api/v3/ping
            port: {{ .Values.missionControl.internalPort }}
          periodSeconds: 10
          initialDelaySeconds: 240
        readinessProbe:
          httpGet:
            path: /api/v3/ping
            port: {{ .Values.missionControl.internalPort }}
          periodSeconds: 10
          initialDelaySeconds: 240
    {{- with .Values.missionControl.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.missionControl.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.missionControl.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
      volumes:
      - name: mission-control-data
      {{- if .Values.missionControl.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ if .Values.missionControl.persistence.existingClaim }}{{ .Values.missionControl.persistence.existingClaim }}{{ else }}{{ template "mission-control.fullname" . }}{{ end }}
      {{- else }}
        emptyDir: {}
      {{- end }}