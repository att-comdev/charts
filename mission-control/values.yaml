# Default values for Mission Control.
# This is a YAML-formatted file.
# Beware when changing values here. You should know what you are doing!
# Access the values with {{ .Values.key.subkey }}

# Common
imagePullPolicy: IfNotPresent

uid: 1050

imagePullSecrets:

images:
  tags:
    createUser: mvertes/alpine-mongo:3.6.3-0
    initContainerImage: "alpine:3.6"
    insightExecutor: docker.bintray.io/jfrog/insight-executor:3.1.2
    insightScheduler: docker.bintray.io/jfrog/insight-scheduler:3.1.2
    insightServer: docker.bintray.io/jfrog/insight-server:3.1.2
    missionControl: docker.bintray.io/jfrog/mission-control:3.1.2

## Role Based Access Control
## Ref: https://kubernetes.io/docs/admin/authorization/rbac/
rbac:
  create: true
  role:
    ## Rules to create. It follows the role specification
    rules:
    - apiGroups:
      - ''
      resources:
      - services
      - endpoints
      - pods
      verbs:
      - get
      - watch
      - list

## Service Account
## Ref: https://kubernetes.io/docs/admin/service-accounts-admin/
##
serviceAccount:
  create: true
  ## The name of the ServiceAccount to use.
  ## If not set and create is true, a name is generated using the fullname template
  name:

# Sub charts
## Configuration values for the mongodb dependency
## ref: https://github.com/kubernetes/charts/blob/master/stable/mongodb/README.md
##
mongodb:
  enabled: true
  image:
    tag: 3.6.8-debian-9
    pullPolicy: IfNotPresent
  persistence:
    size: 20Gi
    enabled: true
    ## existingClaim: jfmc-mongo-pvc
    storageClass: general
  resources:
    requests:
      memory: "2Gi"
      cpu: "100m"
    limits:
      memory: "2Gi"
      cpu: "4"
  ## Make sure the --wiredTigerCacheSizeGB is no more than half the memory limit!
  ## This is critical to protect against OOMKill by Kubernetes!
  mongodbExtraFlags:
  - "--wiredTigerCacheSizeGB=1"
  usePassword: false
  db:
    adminUser: admin
    adminPassword: smil3yfc
    mcUser: mission_platform
    mcPassword: smil3yfc
    insightUser: jfrog_insight
    insightPassword: smil3yfc
    insightSchedulerDb: insight_scheduler
  livenessProbe:
    initialDelaySeconds: 40
  readinessProbe:
    initialDelaySeconds: 30

elasticsearch:
  enabled: true
  persistence:
    size: 60Gi
    enabled: true
    ## existingClaim: jfmc-elastic-pvc
    storageClass: general
  resources:
    requests:
      memory: "2Gi"
      cpu: "100m"
    limits:
      memory: "3Gi"
      cpu: "4"
  javaOpts: {}
  #  xms: "2g"
  #  xmx: "2g"
  env:
    clusterName: "es-cluster"
    esUsername: "elastic"
    esPassword: "smil3yfc"

podRestartTime:

secrets:
  tls:
    missioncontrol:
      missioncontrol:
        public: missioncontrol-tls-public

endpoints:
  cluster_domain_suffix: cluster.local
  missioncontrol:
    host_fqdn_override:
      default: null
    # NOTE(SaiBattina): this chart supports TLS for fqdn over-ridden public
    # endpoints using the following format:
    #   public:
    #     host: mission.domain.example
    #     tls:
    #       crt: null
    #       key: null
    #       ca: null

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  path: /
  hosts:
    - mission.domain.example
  tls: []
  #  - secretName: missioncontrol-secret-tls
  #    hosts:
  #      - mission.domain.example

## Common
## Create secret with keys and certs as per documentation provided in README.md
existingCertsSecret:

## Create secret for certs from provided values. Follow script given in README.md to generate keys and certs. Example is given in
## Example values given in https://github.com/kubernetes/charts//blob/master/incubator/mission-control/ci/test-values.yaml
insightKey: |
  QmFnIEF0dHJpYnV0ZXMKICAgIGZyaWVuZGx5TmFtZTogc2VjdXJlLWluc2lnaHQKICAgIGxvY2Fs
  S2V5SUQ6IDU0IDY5IDZEIDY1IDIwIDMxIDM1IDM0IDMwIDM5IDMyIDM4IDMyIDMxIDMxIDM0IDMy
  IDM2IApLZXkgQXR0cmlidXRlczogPE5vIEF0dHJpYnV0ZXM+Ci0tLS0tQkVHSU4gUFJJVkFURSBL
  RVktLS0tLQpNSUlFdmdJQkFEQU5CZ2txaGtpRzl3MEJBUUVGQUFTQ0JLZ3dnZ1NrQWdFQUFvSUJB
  UUM1WlhSOTUrblhkbWRxCmtxSmhMZnRYaVN0Q1owbHoxNVZaNy9RcElUN0Z6N0ZSKzZlcjZLQ3BC
  eGMyS0ZpK1VMWFlFZjZ2K0I0Z2tGWkwKWUwrakx6SjVlN0Nic3lQcGVicVBWV2VGUStmc2J5d0p3
  U21QbC9QV0I0cnBPdHlqc29EVmFIRnROUVJjcWZMSQpFR3BoWVMycmdVK1FWS0YzRDJoVjZNZTdG
  dmh5M25rYU5walYwYmxmbFIyV0VPNFdnaTZyTjF4QlNyWEwzb1ZpCmtMUW1Rc2hGNUg2M0draW9j
  MWEvT0NUZDF0Y3M3OE9PS0hVRTIrUklyMjRXbFRQWjJyUzdWc1dtNDl5Q0xXZHYKMkZFZFlLRUdN
  TkdHdjdzVjBBRXFqWkFjNXNsOFZUZEdDd1JSSERLWTZEcGNGS3dOb2lnblFCTlRwT2ZpdU41bQpQ
  VTFGZWFsYkFnTUJBQUVDZ2dFQVAxNm5WOVhxZnlSUXF3UGVEdnVKbXQwZTlUNmF3OGJmblBOQThN
  SVZVOFh2CkpVZXdnemtybVRyOE94M0ZYNS8wMkJzbWcvMTZSc1V2U2VxUzluTk9mR25EN3lSblZR
  bXZ0QWlNTHVnTUlTdksKMExhK3Z2OUFjRnI1cDBqZ1crL0t5NmM4aGdpR0tpcEkrd3RwWVVtM001
  VXFuZm5maXZPd1JSVWhHQmo4NlQzKwpyS1NQN0RkUU1rdjMwMHNxZ1luQklmazlLZlRIaFlzcHpo
  bUN6UzY2alVVSVdVWXhGaFh5Tmk4Z0pDelRhME5HCm0vQ3lGU0N6Y3pFSXVaRmZ1OUxKTUJjY2Nn
  RUM5K0JPSUQ4WjBOaXpQRVJVUTdZS1VjdU1BcDVyWXZnZWxZQjAKR1lsVkswSTJSK3NxSWp4U2Za
  clcweGgzWGJYSGFpWGZzTStSb0lkakFRS0JnUURxc2I5NnMwem9yUHlxZnVuaQpacEtFWUZCSDgx
  RXBrNkhZeitOcTI4ZW1UNkJsRUJ5SEx3VUhBQ2Z5enhnQ05od2NTTUVoZ2tkeTJWT013eTd4Citj
  enRuUmpQQ25qL3FBRk1QN1ljb2QwM2hnNzZqdk9MZzl3RmVYWkxLeWkzRDVTL2pobUtyVnJvNXF6
  dmpDWE8KdEpvVTJVR2U5YmtrNk85ZFNCaGxKSXBIZ1FLQmdRREtPZ2ZIY2JDUmpQWUZhWTkwWit6
  TTd5UjdFRUNpNExsNQoyaXJRTVBldHdBS2xCb01nNkNzZlhxL0RCOUlHTk9oUkdkN2k1bVVmMUJT
  UEFLaStDZkZ5a0RYdlNNZ2F4VkFkCnNpWG9NSGlGTGY0RW9rL3RtL2N2YkxrcnJDUEpiVHM3Z1JK
  N2xrekMzZEFxUE5sRXk2RGRHaVE2L3ZtV2tTN0wKQ2IzN0NuMSsyd0tCZ0Rrckt4VmNiN09Oejg1
  SU0vaXVPNnA3TzVNTE5nNEdwRG9JQ2NHUjM4UW5TVTdVNmQ0VQpHZ2xtaEZTbEZaZ1VUaXlsbkVY
  cFVqWXJzaXByc1JmSVhaN1QwYU05VGRRWXZKZ3lQTTRrcjVwQzBZcy9IeHd3CjludHU1dDNRbVk1
  ZUFVSFgvMmpFYVl5cUJCNGw2Vis4cG52Rm9ESjBjTEVJL0tXZ1ZqRHRBYklCQW9HQkFMR2IKNis4
  Z0M5cVp1ZzJnMjR4NkpnRUxXN2YxMno3eUxoUTJKM240TjkvVERyK1BpNlZnSTFlRzJzbG8yZTMz
  azc1LwpBVUc0NWtIaEN6bFpjOXFNY3hHU1ZMeFc2T0NTUVQ0RGs4VnNwTDBiV3NrSklUZm56bDVK
  bUF3aVFNQU0vb1BSClpjRkRqU0ZzblFJcnRRcjE2TStud1FCTHBqdTJRU216NGJaVlRVa1hBb0dC
  QUpnVys2cVdJbjdCdkJDc3p3aEIKYlViNDkyM291Y3hKSlVIWmNjNEdibGhLOGtMbEtWajZyVzBU
  c0pqb0JDYk1RT1hoNXJ0cWlNb2dEcmVWUGFWYQpUV0h0cmpyRnUrTmx4U2paT1JZVmVuaGlkdmVw
  NncwdmJvNE9oQnJ3cDZUcTRIeXBvb1BLem13ZkZvai9XdXVxCkJuSXZXTy95MDA2T0p3T2JtQVNC
  RGN6MAotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg==
insightCrt: |
  QmFnIEF0dHJpYnV0ZXMKICAgIGZyaWVuZGx5TmFtZTogc2VjdXJlLWluc2lnaHQKICAgIGxvY2Fs
  S2V5SUQ6IDU0IDY5IDZEIDY1IDIwIDMxIDM1IDM0IDMwIDM5IDMyIDM4IDMyIDMxIDMxIDM0IDMy
  IDM2IApzdWJqZWN0PS9DPWluL1NUPUthbi9MPUJlbmdhbHVydS9PPUpGcm9nL09VPUluc2lnaHQv
  Q049Kgppc3N1ZXI9L0M9aW4vU1Q9S2FuL0w9QmVuZ2FsdXJ1L089SkZyb2cvT1U9SW5zaWdodC9D
  Tj0qCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEV1RDQ0FrR2dBd0lCQWdJRUNFT2RH
  akFOQmdrcWhraUc5dzBCQVFzRkFEQmRNUXN3Q1FZRFZRUUdFd0pwCmJqRU1NQW9HQTFVRUNCTURT
  MkZ1TVJJd0VBWURWUVFIRXdsQ1pXNW5ZV3gxY25VeERqQU1CZ05WQkFvVEJVcEcKY205bk1SQXdE
  Z1lEVlFRTEV3ZEpibk5wWjJoME1Rb3dDQVlEVlFRRERBRXFNQjRYRFRFNE1UQXpNREU1TXpZMQpN
  Rm9YRFRFNU1ERXlPREU1TXpZMU1Gb3dYVEVMTUFrR0ExVUVCaE1DYVc0eEREQUtCZ05WQkFnVEEw
  dGhiakVTCk1CQUdBMVVFQnhNSlFtVnVaMkZzZFhKMU1RNHdEQVlEVlFRS0V3VktSbkp2WnpFUU1B
  NEdBMVVFQ3hNSFNXNXoKYVdkb2RERUtNQWdHQTFVRUF3d0JLakNDQVNJd0RRWUpLb1pJaHZjTkFR
  RUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQgpBTGxsZEgzbjZkZDJaMnFTb21FdCsxZUpLMEpuU1hQWGxW
  bnY5Q2toUHNYUHNWSDdwNnZvb0trSEZ6WW9XTDVRCnRkZ1IvcS80SGlDUVZrdGd2Nk12TW5sN3NK
  dXpJK2w1dW85Vlo0VkQ1K3h2TEFuQktZK1g4OVlIaXVrNjNLT3kKZ05Wb2NXMDFCRnlwOHNnUWFt
  RmhMYXVCVDVCVW9YY1BhRlhveDdzVytITGVlUm8ybU5YUnVWK1ZIWllRN2hhQwpMcXMzWEVGS3Rj
  dmVoV0tRdENaQ3lFWGtmcmNhU0toelZyODRKTjNXMXl6dnc0NG9kUVRiNUVpdmJoYVZNOW5hCnRM
  dFd4YWJqM0lJdFoyL1lVUjFnb1FZdzBZYS91eFhRQVNxTmtCem15WHhWTjBZTEJGRWNNcGpvT2x3
  VXJBMmkKS0NkQUUxT2s1K0s0M21ZOVRVVjVxVnNDQXdFQUFhTWhNQjh3SFFZRFZSME9CQllFRkxs
  SW4zenVibCttYzdqZgozb2pRci9DTGMzK0lNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUN1bDZK
  VFlEUEJxZmFMbDZNU0pPWU93UWs0CjJ4VGEzeHQ0VHpmU2l0Mk05S3RGcVA4anBHOXBnUlgzRVZB
  QkZMZWFIUy9uWm9lTWI1UGl4OC94eXNaUjBwRE4KMHlpYzVhOXBtR3RMMnZ6UU9rY3dVc0RoZGtG
  RE5rWDZ3NURMU0xxUDM3OUtWVVp0TVNLalhqeFgzSUxtODNOQgpGd1FkT2QxZUl3VWo3WlZ0UmQ4
  UnpJSXpqTytkenpzNXJFeWJFWE1iUlFJWWRJNkgrWm4rTStVMmxoekZ1WTFNCjQ0dTlzY3BFdXh4
  c0pkYWtpMmUrNHZDdDVQSk1xbzhROUxNaTh4UFJ3K2xMbzY3STgyZWIxUUFFb2o2NUp0MEwKcEZ0
  bXB0WW9NWDIyWkZoWXNLMSsyYXYwQUY0L2lMbENabXNkanJkSHlWL05MOE1pRFdpU1dNOWN4OW9X
  Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
jfmcCrt: |
  QmFnIEF0dHJpYnV0ZXMKICAgIGZyaWVuZGx5TmFtZTogc2VjdXJlLWpmbWMKICAgIGxvY2FsS2V5
  SUQ6IDU0IDY5IDZEIDY1IDIwIDMxIDM1IDM0IDMwIDM5IDMyIDM4IDMyIDMxIDMyIDM5IDM1IDM3
  IApzdWJqZWN0PS9DPWZyL1NUPUZyYW5jZS9MPVRvdWxvdXNlL089SkZyb2cvT1U9SkZNQy9DTj0q
  Cmlzc3Vlcj0vQz1mci9TVD1GcmFuY2UvTD1Ub3Vsb3VzZS9PPUpGcm9nL09VPUpGTUMvQ049Kgot
  LS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRFZ6Q0NBaitnQXdJQkFnSUVCVGp3eURBTkJn
  a3Foa2lHOXcwQkFRc0ZBREJjTVFzd0NRWURWUVFHRXdKbQpjakVQTUEwR0ExVUVDQk1HUm5KaGJt
  TmxNUkV3RHdZRFZRUUhFd2hVYjNWc2IzVnpaVEVPTUF3R0ExVUVDaE1GClNrWnliMmN4RFRBTEJn
  TlZCQXNUQkVwR1RVTXhDakFJQmdOVkJBTU1BU293SGhjTk1UZ3hNRE13TVRrek5qVXkKV2hjTk1U
  a3dNVEk0TVRrek5qVXlXakJjTVFzd0NRWURWUVFHRXdKbWNqRVBNQTBHQTFVRUNCTUdSbkpoYm1O
  bApNUkV3RHdZRFZRUUhFd2hVYjNWc2IzVnpaVEVPTUF3R0ExVUVDaE1GU2taeWIyY3hEVEFMQmdO
  VkJBc1RCRXBHClRVTXhDakFJQmdOVkJBTU1BU293Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJ
  QkR3QXdnZ0VLQW9JQkFRRE4KUVRyYTJmNCtWdHM2K1hqUU5oNFIzVVBzL1hDWHZwalB1WitWWkFN
  a2VFNFpmMlBMQW1ETmdhS1FBZ1A2SFcxbQo4R3pVa05XTG9EOVB6bWw3NkNDSW13NzcvZnZjVURS
  em0vK0dwdEJaMUp4ZFR3VGVXWDcyTzhuL1owNDlaSm5LClJjUnk2c3ZyZlh1VEkwZ2xvcXo5Vm95
  TkZDQjFXZ0pxellQaFZTVHN5YmxLZkpiMEM1MTVkUkJHL1gxb05GY28KZEd0b2NNR1hhcGhSWG53
  NFpJbkgrWlh5SW10U0UvckFOYTBORklRTmVHTzZ3bXRoZVRKMlpZWHJ3TVNNZ3E3eQpUdDhhM0dZ
  dzlkb0ZUWktkSStZcDZDUWNHWFNoOUxtZlY1amxpN3o4RGdGamdEaGg4bnk0bjdKSWZjSjhjYXMr
  CjBvMWFGQXFSYjNHUFYzYmc5aDNwQWdNQkFBR2pJVEFmTUIwR0ExVWREZ1FXQkJTa0lOOG9NUXRz
  TklYZ08yNVYKOWtLa2Y5ck1jakFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBandIMG5vRGVwM1Jn
  c20vckc5Qnh2NzcyV0drcQpEUkQzNmExWmk5THpYMHZ0SFBqR1lNUEd3a004Szk4N0JMZFEya0tI
  WUlhSE16cDk0d1BsbEk2Wlo0VnptS0svCnJHdmVUeUdVYnR4Yks2MmVyU2JEUlFyOW1obDNkeW04
  cDI5MFZ0SUI3UmtBM1F5UTBFR3lGV1hCdHhaTVpQK0QKU3FHNmxKVnJzbGNORWdvcXU5RGx1bnVs
  WFQ2M003S3MrSW0yZUFoUldZSUFncTFCOGFsQUV1Q3pzOXVnUmltbQpYaklEYWpNUTFyc2VlU01k
  N01MdnJCNzk0ck1nSW9RSUxMbyttLzFlUjUvKzBRQTBZUjZpRTBncXVjQ2JtcmtvCnBLSEZvaTNW
  VjUrZ3JxWDA2aFBvVzZ1a1lQOGwvSy81Z1Z6dzM5RWdRL25mZFVtLzlydW1NbHF0RkE9PQotLS0t
  LUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
jfmcKeystore: |
  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
jfmcTruststore: |
  /u3+7QAAAAIAAAABAAAAAgALaW5zaWdodGNlcnQAAAFmxnqRxQAFWC41MDkAAANdMIIDWTCCAkGg
  AwIBAgIECEOdGjANBgkqhkiG9w0BAQsFADBdMQswCQYDVQQGEwJpbjEMMAoGA1UECBMDS2FuMRIw
  EAYDVQQHEwlCZW5nYWx1cnUxDjAMBgNVBAoTBUpGcm9nMRAwDgYDVQQLEwdJbnNpZ2h0MQowCAYD
  VQQDDAEqMB4XDTE4MTAzMDE5MzY1MFoXDTE5MDEyODE5MzY1MFowXTELMAkGA1UEBhMCaW4xDDAK
  BgNVBAgTA0thbjESMBAGA1UEBxMJQmVuZ2FsdXJ1MQ4wDAYDVQQKEwVKRnJvZzEQMA4GA1UECxMH
  SW5zaWdodDEKMAgGA1UEAwwBKjCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALlldH3n
  6dd2Z2qSomEt+1eJK0JnSXPXlVnv9CkhPsXPsVH7p6vooKkHFzYoWL5QtdgR/q/4HiCQVktgv6Mv
  Mnl7sJuzI+l5uo9VZ4VD5+xvLAnBKY+X89YHiuk63KOygNVocW01BFyp8sgQamFhLauBT5BUoXcP
  aFXox7sW+HLeeRo2mNXRuV+VHZYQ7haCLqs3XEFKtcvehWKQtCZCyEXkfrcaSKhzVr84JN3W1yzv
  w44odQTb5EivbhaVM9natLtWxabj3IItZ2/YUR1goQYw0Ya/uxXQASqNkBzmyXxVN0YLBFEcMpjo
  OlwUrA2iKCdAE1Ok5+K43mY9TUV5qVsCAwEAAaMhMB8wHQYDVR0OBBYEFLlIn3zubl+mc7jf3ojQ
  r/CLc3+IMA0GCSqGSIb3DQEBCwUAA4IBAQCul6JTYDPBqfaLl6MSJOYOwQk42xTa3xt4TzfSit2M
  9KtFqP8jpG9pgRX3EVABFLeaHS/nZoeMb5Pix8/xysZR0pDN0yic5a9pmGtL2vzQOkcwUsDhdkFD
  NkX6w5DLSLqP379KVUZtMSKjXjxX3ILm83NBFwQdOd1eIwUj7ZVtRd8RzIIzjO+dzzs5rEybEXMb
  RQIYdI6H+Zn+M+U2lhzFuY1M44u9scpEuxxsJdaki2e+4vCt5PJMqo8Q9LMi8xPRw+lLo67I82eb
  1QAEoj65Jt0LpFtmptYoMX22ZFhYsK1+2av0AF4/iLlCZmsdjrdHyV/NL8MiDWiSWM9cx9oWDdC3
  5f7VEu+9/plB/Cl9J6ZqlOw=

missionControl:
  replicaCount: 1
  name: mission-control
  missionControlUrl:
  podRestartTime:
  persistence:
    enabled: true
    ## A manually managed Persistent Volume and Claim
    ## Requires persistence.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    # existingClaim:

    mountPath: "/var/opt/jfrog/mission-control"
    accessMode: ReadWriteOnce
    size: 100Gi
    ## artifactory data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    storageClass: general

  ## Control Java options (JAVA_OPTIONS)
  ## IMPORTANT: keep javaOpts.xmx no higher than resources.limits.memory
  javaOpts:
    other: "-server -XX:+UseG1GC -Dfile.encoding=UTF8"
    xms:
    xmx:
  resources:
    requests:
      memory: "2Gi"
      cpu: "100m"
    limits:
      memory: "3Gi"
      cpu: "2"
  nodeSelector: {}

  tolerations: []

  affinity: {}

  service:
    type: ClusterIP
  internalPort: 8080
  externalPort: 80


insightServer:
  replicaCount: 1
  name: insight-server
  service:
    name: insight-server
    type: ClusterIP
  persistence:
    size: 10Gi
    enabled: true
    ## existingClaim: jfmc-server-pvc
    storageClass: general
  externalHttpPort: 8082
  internalHttpPort: 8082
  externalHttpsPort: 8091
  internalHttpsPort: 8091
  resources:
    requests:
      memory: "500Mi"
      cpu: "100m"
    limits:
      memory: "1Gi"
      cpu: "2"
  nodeSelector: {}

  tolerations: []

  affinity: {}

insightScheduler:
  replicaCount: 1
  name: insight-scheduler
  service:
    type: ClusterIP
  persistence:
    size: 5Gi
    enabled: true
    ## existingClaim: jfmc-sched-pvc
    storageClass: general
  externalPort: 8080
  internalPort: 8080
  ## Control Java options (JFMC_EXTRA_JAVA_OPTS)
  ## IMPORTANT: keep javaOpts.xmx no higher than resources.limits.memory
  javaOpts: {}
  #  other:
  #  xms: "500m"
  #  xmx: "3g"
  resources:
    requests:
      memory: "500Mi"
      cpu: "100m"
    limits:
      memory: "3Gi"
      cpu: "2"
  nodeSelector: {}

  tolerations: []

  affinity: {}

insightExecutor:
  replicaCount: 1
  name: insight-executor
  persistence:
    size: 5Gi
    enabled: true
    ## existingClaim: jfmc-exec-pvc
    ## A manually managed Persistent Volume and Claim
    ## Requires persistence.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    # existingClaim:

    mountPath: "/var/cloudbox"
    accessMode: ReadWriteOnce
    size: 100Gi
    ## artifactory data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    storageClass: general

  service:
    type: ClusterIP
  externalPort: 8080
  internalPort: 8080
  javaOpts: {}
  #  other:
  #  xms: "500m"
  #  xmx: "3g"

  resources:
    requests:
      memory: "500Mi"
      cpu: "100m"
    limits:
      memory: "3Gi"
      cpu: "2"
  nodeSelector: {}

  tolerations: []

  affinity: {}

manifests:
  secret_ingress_tls: true
