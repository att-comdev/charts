# Default values for Xray HA.
# This is a YAML-formatted file.
# Beware when changing values here. You should know what you are doing!
# Access the values with {{ .Values.key.subkey }}

# Common
imagePullPolicy: IfNotPresent
imagePullSecrets:

## Role Based Access
## Ref: https://kubernetes.io/docs/admin/authorization/rbac/
rbac:
  create: true
  role:
    ## Rules to create. It follows the role specification
    rules:
    - apiGroups:
      - ''
      resources:
      - services
      - endpoints
      - pods
      verbs:
      - get
      - watch
      - list

serviceAccount:
  create: true
  ## The name of the ServiceAccount to use.
  ## If not set and create is true, a name is generated using the fullname template
  name:

images:
  tags:
    initContainerImage: "alpine:3.6"
    analysis: docker.bintray.io/jfrog/xray-analysis:2.6.0
    indexer: docker.bintray.io/jfrog/xray-indexer:2.6.0
    persist: docker.bintray.io/jfrog/xray-persist:2.6.0
    server: docker.bintray.io/jfrog/xray-server:2.6.0

# PostgreSQL
## Configuration values for the postgresql dependency
## ref: https://github.com/kubernetes/charts/blob/master/stable/postgressql/README.md
##
postgresql:
  enabled: true
  postgresDatabase: "xraydb"
  postgresUser: "xray"
  postgresPassword: smil3yfc
  service:
    port: 5432
  persistence:
    enabled: true
    size: 50Gi
    ## existingClaim: xray-postgresql-pvc
    storageClass: general
  resources:
    requests:
      memory: "1Gi"
      cpu: "250m"
    limits:
      memory: "1Gi"
      cpu: "500m"
  nodeSelector: {}
  affinity: {}
  tolerations: []

## Configuration values for the mongodb dependency
## ref: https://github.com/kubernetes/charts/blob/master/stable/mongodb/README.md
##
secrets:
  tls:
    xray:
      xray:
        public: xray-tls-public
endpoints:
  cluster_domain_suffix: cluster.local
  xray:
    host_fqdn_override:
      default: null
    # NOTE(SaiBattina): this chart supports TLS for fqdn over-ridden public
    # endpoints using the following format:
    #   public:
    #     host: xray.domain.example
    #     tls:
    #       crt: null
    #       key: null
    #       ca: null

ingress:
  enabled: false
  defaultBackend:
    enabled: true
  # Used to create an Ingress record.
  hosts:
    - xray.domain.example
  annotations:
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  tls:
  # Secrets must be manually created in the namespace.
  # - secretName: xray-secret-tls
  #   hosts:
  #     - xray.domain.example

mongodb:
  enabled: true
  image:
    tag: 3.6.3
    pullPolicy: IfNotPresent
  persistence:
    enabled: true
    size: 50Gi
    ## existingClaim: xray-mongo-pvc
    storageClass: general
  resources:
   requests:
     memory: "4Gi"
     cpu: "1"
   limits:
      memory: "5Gi"
      cpu: "4"
  ## Make sure the --wiredTigerCacheSizeGB is no more than half the memory limit!
  ## This is critical to protect against OOMKill by Kubernetes!
  mongodbExtraFlags:
  - "--wiredTigerCacheSizeGB=3"
  mongodbRootPassword: smil3yfc
  mongodbUsername: xray
  mongodbPassword: smil3yfc
  mongodbDatabase: xray
#  livenessProbe:
#    initialDelaySeconds: 60
#    periodSeconds: 10
#  readinessProbe:
#    initialDelaySeconds: 30
#    periodSeconds: 30
  nodeSelector: {}
  affinity: {}
  tolerations: []

# RabbitMQ HA
## Configuration values for the rabbitmq-ha dependency
## ref: https://github.com/kubernetes/charts/blob/master/stable/rabbitmq-ha/README.md
##
rabbitmq-ha:
  enabled: true
  replicaCount: 1
  rabbitmqUsername: guest
  rabbitmqPassword: smil3yfc
  customConfigMap: false
  rabbitmqErlangCookie: XRAYRABBITMQCLUSTER
  rabbitmqMemoryHighWatermark: 500MB
  rabbitmqNodePort: 5672
  policies: |-
    {
      "name": "ha-all",
      "apply-to": "all",
      "pattern": ".*",
      "vhost": "/",
      "definition": {
        "ha-mode": "all",
        "ha-sync-mode": "automatic",
      }
    }
  resources: {}
  #  requests:
  #    memory: "250Mi"
  #    cpu: "100m"
  #  limits:
  #    memory: "550Mi"
  #    cpu: "200m"
  persistentVolume:
    enabled: false
    size: 20Gi

  rbac:
    create: true
  nodeSelector: {}
  tolerations: []

# RabbitMQ
## Configuration values for the rabbitmq dependency
## ref: https://github.com/kubernetes/charts/blob/master/stable/rabbitmq/README.md
##
rabbitmq:
  enabled: false
  rabbitmqErlangCookie: XRAYRABBITMQCLUSTER
  rabbitmqMemoryHighWatermark: 500MB
  rabbitmqNodePort: 5672
  rabbitmqUsername: user
  rabbitmqPassword:
  persistentVolume:
    enabled: false
    size: 20Gi
  rbac:
    create: true

common:
  xrayVersion: 2.4.0
  xrayConfigPath: /var/opt/jfrog/xray/data
  xrayUserId: 1035
  xrayGroupId: 1035
  stdOutEnabled: true
  ## Xray requires a unique master key
  ## You can generate one with the command:
  ## 'openssl rand -hex 32'
  ## Pass it to helm with '--set common.masterKey=${MASTER_KEY}'
  ## IMPORTANT: You should NOT use the example masterKey for a production deployment!
  masterKey: FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF

# For setting up external services, must pass the connection URL for them
global:
  mongoUrl:
  postgresqlUrl:


analysis:
  name: xray-analysis
  replicaCount: 1
  internalPort: 7000
  externalPort: 7000
  service:
    type: ClusterIP
  persistence:
    enabled: false
  ## Container storage limit
  storage:
    sizeLimit: 10Gi
  resources:
    requests:
      memory: "1Gi"
      cpu: "250m"
    limits:
      memory: "1Gi"
      cpu: "500m"
  nodeSelector: {}
  affinity: {}
  tolerations: []

indexer:
  name: xray-indexer
  replicaCount: 1
  internalPort: 7002
  externalPort: 7002
  service:
    type: ClusterIP
  ## Container storage limit
  persistence:
    enabled: false
  storage:
    sizeLimit: 30Gi
  resources:
    requests:
      memory: "1Gi"
      cpu: "250m"
    limits:
      memory: "1Gi"
      cpu: "500m"
  nodeSelector: {}
  affinity: {}
  tolerations: []

persist:
  name: xray-persist
  replicaCount: 1
  internalPort: 7003
  externalPort: 7003
  service:
    type: ClusterIP
  ## Container storage limit
  persistence:
    enabled: false
  storage:
    sizeLimit: 10Gi
  resources:
    requests:
      memory: "1Gi"
      cpu: "250m"
    limits:
      memory: "1Gi"
      cpu: "500m"
  nodeSelector: {}
  affinity: {}
  tolerations: []

server:
  name: xray-server
  replicaCount: 1
  internalPort: 8000
  externalPort: 80
  service:
    type: ClusterIP
    name: xray
  ## Container storage limit
  persistence:
    enabled: false
  storage:
    sizeLimit: 70Gi
  # Whitelist IPs allowed to LoadBalancer type services
  # Example: loadBalancerSourceRanges={82.82.190.51/32,141.141.8.8/32}
  loadBalancerSourceRanges: []
  resources:
    requests:
      memory: "1Gi"
      cpu: "250m"
    limits:
      memory: "1Gi"
      cpu: "1"
  nodeSelector: {}
  affinity: {}
  tolerations: []

manifests:
  secret_ingress_tls: true
